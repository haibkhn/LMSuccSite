{"trial_id": "0001", "hyperparameters": {"space": [{"class_name": "Float", "config": {"name": "l2_regularization", "default": 0.001, "conditions": [], "min_value": 0.001, "max_value": 0.1, "step": null, "sampling": "log"}}, {"class_name": "Int", "config": {"name": "seq_conv_filters", "default": null, "conditions": [], "min_value": 16, "max_value": 64, "step": 16, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "seq_conv_kernel", "default": null, "conditions": [], "min_value": 15, "max_value": 19, "step": 2, "sampling": "linear"}}, {"class_name": "Float", "config": {"name": "seq_dropout_1", "default": 0.2, "conditions": [], "min_value": 0.2, "max_value": 0.5, "step": 0.1, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "seq_dense_units", "default": null, "conditions": [], "min_value": 16, "max_value": 64, "step": 16, "sampling": "linear"}}, {"class_name": "Float", "config": {"name": "seq_dropout_2", "default": 0.2, "conditions": [], "min_value": 0.2, "max_value": 0.5, "step": 0.1, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "struct_dense_multiplier", "default": null, "conditions": [], "min_value": 1, "max_value": 4, "step": 1, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "max_struct_dense", "default": null, "conditions": [], "min_value": 64, "max_value": 256, "step": 64, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "struct_conv_filters", "default": null, "conditions": [], "min_value": 16, "max_value": 64, "step": 16, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "struct_conv_kernel", "default": null, "conditions": [], "min_value": 2, "max_value": 4, "step": 1, "sampling": "linear"}}, {"class_name": "Float", "config": {"name": "struct_dropout_1", "default": 0.1, "conditions": [], "min_value": 0.1, "max_value": 0.4, "step": 0.1, "sampling": "linear"}}, {"class_name": "Float", "config": {"name": "struct_dropout_2", "default": 0.1, "conditions": [], "min_value": 0.1, "max_value": 0.4, "step": 0.1, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "prot_t5_dense_1", "default": null, "conditions": [], "min_value": 128, "max_value": 512, "step": 128, "sampling": "linear"}}, {"class_name": "Float", "config": {"name": "prot_t5_dropout_1", "default": 0.3, "conditions": [], "min_value": 0.3, "max_value": 0.6, "step": 0.1, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "prot_t5_dense_2", "default": null, "conditions": [], "min_value": 64, "max_value": 256, "step": 64, "sampling": "linear"}}, {"class_name": "Float", "config": {"name": "prot_t5_dropout_2", "default": 0.3, "conditions": [], "min_value": 0.3, "max_value": 0.6, "step": 0.1, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "final_dense_1", "default": null, "conditions": [], "min_value": 32, "max_value": 128, "step": 32, "sampling": "linear"}}, {"class_name": "Float", "config": {"name": "final_dropout_1", "default": 0.3, "conditions": [], "min_value": 0.3, "max_value": 0.6, "step": 0.1, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "final_dense_2", "default": null, "conditions": [], "min_value": 16, "max_value": 64, "step": 16, "sampling": "linear"}}, {"class_name": "Float", "config": {"name": "final_dropout_2", "default": 0.3, "conditions": [], "min_value": 0.3, "max_value": 0.6, "step": 0.1, "sampling": "linear"}}, {"class_name": "Float", "config": {"name": "learning_rate", "default": 0.0001, "conditions": [], "min_value": 0.0001, "max_value": 0.01, "step": null, "sampling": "log"}}], "values": {"l2_regularization": 0.013712125054412954, "seq_conv_filters": 32, "seq_conv_kernel": 19, "seq_dropout_1": 0.30000000000000004, "seq_dense_units": 48, "seq_dropout_2": 0.30000000000000004, "struct_dense_multiplier": 3, "max_struct_dense": 192, "struct_conv_filters": 16, "struct_conv_kernel": 2, "struct_dropout_1": 0.1, "struct_dropout_2": 0.30000000000000004, "prot_t5_dense_1": 256, "prot_t5_dropout_1": 0.3, "prot_t5_dense_2": 256, "prot_t5_dropout_2": 0.3, "final_dense_1": 64, "final_dropout_1": 0.5, "final_dense_2": 64, "final_dropout_2": 0.5, "learning_rate": 0.0009124105694925094, "tuner/epochs": 2, "tuner/initial_epoch": 0, "tuner/bracket": 3, "tuner/round": 0}}, "metrics": {"metrics": {}}, "score": null, "best_step": 0, "status": "FAILED", "message": "Traceback (most recent call last):\n  File \"/Users/hai/miniconda3/envs/bioinf/lib/python3.9/site-packages/keras_tuner/src/engine/base_tuner.py\", line 274, in _try_run_and_update_trial\n    self._run_and_update_trial(trial, *fit_args, **fit_kwargs)\n  File \"/Users/hai/miniconda3/envs/bioinf/lib/python3.9/site-packages/keras_tuner/src/engine/base_tuner.py\", line 239, in _run_and_update_trial\n    results = self.run_trial(trial, *fit_args, **fit_kwargs)\n  File \"/Users/hai/miniconda3/envs/bioinf/lib/python3.9/site-packages/keras_tuner/src/tuners/hyperband.py\", line 427, in run_trial\n    return super().run_trial(trial, *fit_args, **fit_kwargs)\n  File \"/Users/hai/miniconda3/envs/bioinf/lib/python3.9/site-packages/keras_tuner/src/engine/tuner.py\", line 314, in run_trial\n    obj_value = self._build_and_fit_model(trial, *args, **copied_kwargs)\n  File \"/Users/hai/miniconda3/envs/bioinf/lib/python3.9/site-packages/keras_tuner/src/engine/tuner.py\", line 233, in _build_and_fit_model\n    results = self.hypermodel.fit(hp, model, *args, **kwargs)\n  File \"/Users/hai/miniconda3/envs/bioinf/lib/python3.9/site-packages/keras_tuner/src/engine/hypermodel.py\", line 149, in fit\n    return model.fit(*args, **kwargs)\n  File \"/Users/hai/miniconda3/envs/bioinf/lib/python3.9/site-packages/keras/src/utils/traceback_utils.py\", line 122, in error_handler\n    raise e.with_traceback(filtered_tb) from None\n  File \"/Users/hai/miniconda3/envs/bioinf/lib/python3.9/site-packages/keras_tuner/src/engine/tuner_utils.py\", line 76, in on_epoch_end\n    self._save_model()\n  File \"/Users/hai/miniconda3/envs/bioinf/lib/python3.9/site-packages/keras_tuner/src/engine/tuner_utils.py\", line 86, in _save_model\n    self.model.save_weights(write_filepath)\n  File \"/Users/hai/miniconda3/envs/bioinf/lib/python3.9/site-packages/h5py/_hl/group.py\", line 483, in __setitem__\n    ds = self.create_dataset(None, data=obj)\n  File \"/Users/hai/miniconda3/envs/bioinf/lib/python3.9/site-packages/h5py/_hl/group.py\", line 183, in create_dataset\n    dsid = dataset.make_new_dset(group, shape, dtype, data, name, **kwds)\n  File \"/Users/hai/miniconda3/envs/bioinf/lib/python3.9/site-packages/h5py/_hl/dataset.py\", line 86, in make_new_dset\n    tid = h5t.py_create(dtype, logical=1)\n  File \"h5py/h5t.pyx\", line 1663, in h5py.h5t.py_create\n  File \"h5py/h5t.pyx\", line 1687, in h5py.h5t.py_create\n  File \"h5py/h5t.pyx\", line 1705, in h5py.h5t.py_create\n  File \"h5py/h5t.pyx\", line 1459, in h5py.h5t._c_int\nTypeError: Unsupported integer size (0)\n"}